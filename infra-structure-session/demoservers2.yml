Description: >
    Ugur Kocak / Udacity 2023

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId: # VPC ID in which you are creating the Security Group.
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      # The security group below with ingress/egress rules allowing traffic on port 80 using TCP protocol from/to any location:
      SecurityGroupIngress: #inbound traffic, inbound rules associated with the security group.
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0 #allow traffic from anywhere
      SecurityGroupEgress: #outbound traffic, outbound rules associated with the security group.
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp #opening an ssh port to connect to a linux server to be able to throubleshoot, manage or install software, e.g. look at a log file
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535 #end port
        CidrIp: 0.0.0.0/0
  #In a Launch configuration, the only required properties are ImageId and Instance Type. The remaining ones are optional.
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData: # Script that will run on the new instance automatically after launch
      # script will first install the Apache Tomcat server, starting the server, and then create an index.html page at the default location, /var/www/html.
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          sed -i 's/Listen 80/Listen 8080/' /etc/httpd/conf/httpd.conf
          systemctl start httpd
          systemctl enable httpd   
          cd /var/www/html
          echo "Udacity Demo Web Server Up and Running!" > index.html
      # ToDo: AMI ID of Ubuntu Linux machine. To get one, try creating a VM from the web console. 
      # id of what you're trying to run, virtual machines run on base of an image, operating system (windows,linux) are baked into a big file 
      # this file gets loaded at boot time for these virtual machines
      # AMI IDs are specific to the region and keep changing with updates in the image
      ImageId: ami-0a261c0e5f51090b1
      # ToDo: Change the key-pair name, as applicable to you. 
      KeyName: private-server-devops-key # ssh key to allow to login on port 22. Assumed that the RSA login key name is VocareumKey2. 
      #Please create a key-pair with the name VocareumKey2 (or any name) in the AWS web console (under EC2 services) before using it in the code above.
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t3.medium # Amazon nomenclature for a specific machine which is how much RAM and which CPU
      # Specifying here that we need 10 GB hard drive for this machine and one drive is enough
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk" # where do I put the hard drive, mount point where you can create folders
        Ebs:
          VolumeSize: '10' # how much Hard-drive space this machine going to need
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PUB-NETS"
      LaunchConfigurationName:  #represents the name of the launch configuration to use to launch instances
        Ref: WebAppLaunchConfig
      MinSize: '3' #range of machines we will be running, which also alerts us to the min/max costs we can be expecting from these machines
      MaxSize: '5'